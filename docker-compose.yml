# for local deployment

services:
  app:
    container_name: accounting-service-app
    build:
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT
        - APP_NAME
        - APP_VERSION
        - COMMIT_SHA
    ports:
    - "127.0.0.1:8100:8000"
    cap_add:
    - SYS_PTRACE
    environment:
    - APP_DEBUG=true
    - AWS_ACCESS_KEY_ID=xxx
    - AWS_SECRET_ACCESS_KEY=xxx
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_MAX_ATTEMPTS=3
    - AWS_RETRY_MODE=standard
    develop:
      watch:
      - action: sync+restart
        path: ./app
        target: /code/app
      - action: rebuild
        path: pdm.lock
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_started
    volumes:
      - ./tests:/code/tests  # to run tests
      - ./alembic/versions:/code/alembic/versions  # to write migration files

  db:
    image: postgres:16-alpine
    container_name: accounting-service-db
    environment:
      POSTGRES_USER: accounting_service
      POSTGRES_PASSWORD: accounting_service
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U accounting_service"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
      start_interval: 1s
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data

  queue:
    image: softwaremill/elasticmq-native:latest
    container_name: accounting-service-queue
    ports:
      - "127.0.0.1:9324:9324"
      - "127.0.0.1:9325:9325"
    volumes:
    - ./elasticmq.conf:/opt/elasticmq.conf

volumes:
  pgdata: {}
