"""empty message

Revision ID: 78baff8a1ba2
Revises: 259ea6796f7b
Create Date: 2024-08-09 17:21:24.085001

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "78baff8a1ba2"
down_revision: str | None = "259ea6796f7b"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "STORAGE", "SINGLE_CELL_SIM", "ML_RETRIEVAL", "ML_LLM", "ML_RAG", name="servicesubtype"
    ).create(op.get_bind())
    op.create_table(
        "price",
        sa.Column("id", sa.BigInteger(), sa.Identity(always=False), nullable=False),
        sa.Column(
            "service_type",
            postgresql.ENUM("STORAGE", "ONESHOT", "LONGRUN", name="servicetype", create_type=False),
            nullable=False,
        ),
        sa.Column(
            "service_subtype",
            postgresql.ENUM(
                "STORAGE",
                "SINGLE_CELL_SIM",
                "ML_RETRIEVAL",
                "ML_LLM",
                "ML_RAG",
                name="servicesubtype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("valid_from", sa.DateTime(timezone=True), nullable=False),
        sa.Column("valid_to", sa.DateTime(timezone=True), nullable=True),
        sa.Column("fixed_cost", sa.Numeric(), nullable=False),
        sa.Column("multiplier", sa.Numeric(), nullable=False),
        sa.Column("vlab_id", sa.Uuid(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_price")),
    )
    op.create_index(op.f("ix_price_created_at"), "price", ["created_at"], unique=False)
    op.create_index(op.f("ix_price_service_subtype"), "price", ["service_subtype"], unique=False)
    op.create_index(op.f("ix_price_vlab_id"), "price", ["vlab_id"], unique=False)
    op.add_column(
        "job",
        sa.Column(
            "reservation_params",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="{}",
            nullable=False,
        ),
    )
    op.add_column(
        "job",
        sa.Column(
            "usage_params",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="{}",
            nullable=False,
        ),
    )
    op.alter_column(
        "job",
        "service_subtype",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "STORAGE", "SINGLE_CELL_SIM", "ML_RETRIEVAL", "ML_LLM", "ML_RAG", name="servicesubtype"
        ),
        nullable=False,
        postgresql_using="service_subtype::servicesubtype",
    )
    op.drop_column("job", "usage_value")
    op.drop_column("job", "properties")
    op.add_column("journal", sa.Column("price_id", sa.BigInteger(), nullable=True))
    op.create_foreign_key(
        op.f("fk_journal_price_id_price"), "journal", "price", ["price_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk_journal_price_id_price"), "journal", type_="foreignkey")
    op.drop_column("journal", "price_id")
    op.add_column(
        "job",
        sa.Column(
            "properties",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "job",
        sa.Column(
            "usage_value",
            sa.BIGINT(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        "job",
        "service_subtype",
        existing_type=sa.Enum(
            "STORAGE", "SINGLE_CELL_SIM", "ML_RETRIEVAL", "ML_LLM", "ML_RAG", name="servicesubtype"
        ),
        type_=sa.VARCHAR(),
        nullable=True,
    )
    op.drop_column("job", "usage_params")
    op.drop_column("job", "reservation_params")
    op.drop_index(op.f("ix_price_vlab_id"), table_name="price")
    op.drop_index(op.f("ix_price_service_subtype"), table_name="price")
    op.drop_index(op.f("ix_price_created_at"), table_name="price")
    op.drop_table("price")
    sa.Enum(
        "STORAGE", "SINGLE_CELL_SIM", "ML_RETRIEVAL", "ML_LLM", "ML_RAG", name="servicesubtype"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
